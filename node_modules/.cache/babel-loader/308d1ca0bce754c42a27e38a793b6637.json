{"ast":null,"code":"export function fetchMembers() {\n  return fetch(\"https://api.github.com/orgs/emberjs/members\", {\n    headers: {\n      Accept: \"application/json\"\n    }\n  }).then(response => {\n    // response is a promise and not an actual data\n    // need to return this response.json so we can\n    // unwrap the promise chain with another .then\n    return response.json();\n  });\n}\nexport function fetchDetails(url) {\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  });\n}\nexport function fetchRepos(url) {\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  });\n}\nexport function saveMember(data) {\n  return fetch(`/members`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    // back end will run JSON.parse\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  });\n}\nexport function fetchFollowing() {\n  return fetch(\"/members\").then(response => {\n    return response.json();\n  });\n}\nexport function updateFollowing(data) {\n  return fetch(`/members/${data.id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    // back end will run JSON.parse\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  });\n}","map":{"version":3,"sources":["/Users/anthonyghobind/ITP404/Assignments/assignment-6-ghobind/src/api.js"],"names":["fetchMembers","fetch","headers","Accept","then","response","json","fetchDetails","url","fetchRepos","saveMember","data","method","body","JSON","stringify","fetchFollowing","updateFollowing","id"],"mappings":"AAAA,OAAO,SAASA,YAAT,GAAwB;AAC7B,SAAOC,KAAK,CAAC,6CAAD,EAAgD;AAC1DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AADiD,GAAhD,CAAL,CAIJC,IAJI,CAIEC,QAAD,IAAc;AACpB;AACA;AACA;AACA,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GATM,CAAP;AAUD;AAED,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAChC,SAAOP,KAAK,CAACO,GAAD,EAAM;AAChBN,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AADO,GAAN,CAAL,CAIJC,IAJI,CAIEC,QAAD,IAAc;AACpB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GANM,CAAP;AAOD;AAED,OAAO,SAASG,UAAT,CAAoBD,GAApB,EAAyB;AAC9B,SAAOP,KAAK,CAACO,GAAD,EAAM;AAChBN,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AADO,GAAN,CAAL,CAIJC,IAJI,CAIEC,QAAD,IAAc;AACpB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GANM,CAAP;AAOD;AAED,OAAO,SAASI,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAOV,KAAK,CAAE,UAAF,EAAa;AACvBW,IAAAA,MAAM,EAAE,MADe;AAEvBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFiB;AAEK;AAC5BT,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHc,GAAb,CAAL,CAMJE,IANI,CAMEC,QAAD,IAAc;AACpB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GARM,CAAP;AASD;AAED,OAAO,SAASU,cAAT,GAA0B;AAC/B,SAAOf,KAAK,CAAC,UAAD,CAAL,CAAkBG,IAAlB,CAAwBC,QAAD,IAAc;AAC1C,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAFM,CAAP;AAGD;AAED,OAAO,SAASW,eAAT,CAAyBN,IAAzB,EAA+B;AACpC,SAAOV,KAAK,CAAE,YAAWU,IAAI,CAACO,EAAG,EAArB,EAAwB;AAClCN,IAAAA,MAAM,EAAE,KAD0B;AAElCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF4B;AAEN;AAC5BT,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHyB,GAAxB,CAAL,CAMJE,IANI,CAMEC,QAAD,IAAc;AACpB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GARM,CAAP;AASD","sourcesContent":["export function fetchMembers() {\n  return fetch(\"https://api.github.com/orgs/emberjs/members\", {\n    headers: {\n      Accept: \"application/json\",\n    },\n  }).then((response) => {\n    // response is a promise and not an actual data\n    // need to return this response.json so we can\n    // unwrap the promise chain with another .then\n    return response.json();\n  });\n}\n\nexport function fetchDetails(url) {\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n    },\n  }).then((response) => {\n    return response.json();\n  });\n}\n\nexport function fetchRepos(url) {\n  return fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n    },\n  }).then((response) => {\n    return response.json();\n  });\n}\n\nexport function saveMember(data) {\n  return fetch(`/members`, {\n    method: \"POST\",\n    body: JSON.stringify(data), // back end will run JSON.parse\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    return response.json();\n  });\n}\n\nexport function fetchFollowing() {\n  return fetch(\"/members\").then((response) => {\n    return response.json();\n  });\n}\n\nexport function updateFollowing(data) {\n  return fetch(`/members/${data.id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(data), // back end will run JSON.parse\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    return response.json();\n  });\n}\n"]},"metadata":{},"sourceType":"module"}